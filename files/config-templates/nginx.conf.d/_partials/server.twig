# CACHELINK SERVER {{ name }}
{% import "_macros/proxy_cache_macros.twig" as cache_macros %}
server {
    listen {{ config.PORT }};   
    listen  [::]:{{ config.PORT }};
    
    location / {
        proxy_pass {{ config.BACKEND }};
        proxy_pass_request_headers off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_intercept_errors on;
        
        client_body_timeout   {{ config.TIMEOUT }};
        proxy_send_timeout    {{ config.TIMEOUT }};
        proxy_connect_timeout {{ config.CONNECT_TIMEOUT }};
        client_max_body_size  0;
        proxy_request_buffering off;
        
        proxy_cache {{ zone_name }};
        proxy_cache_methods GET HEAD;
        set $cache_key "$request_method $scheme://$http_host$request_uri";
        proxy_cache_key $cache_key;
        
        proxy_cache_lock on;
        proxy_cache_lock_age 3s;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        
        {{ cache_macros.cache_with_strategy(config) }}
        {# proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | http_429 | off ...; #}
        proxy_cache_use_stale updating;
        
        add_header X-CacheLink-Status $upstream_cache_status always;
        {% if DEBUG %}
        add_header X-CacheLink-Dbg-Config '{{ config | json_encode }}' always;
        add_header X-CacheLink-Dbg-Cache-Key $cache_key always;
        add_header X-CacheLink-Dbg-Cache-Zone "{{ zone_name }}" always;
        {% endif %}
    }
}